#!/usr/bin/env python3
import subprocess
import os

"""
/www Initial Setup

This script sets up the initial /www
directory structure for charlesreid1.com
content. (Or, charlesreid1.XYZ, whatever.)
"""

SERVER_NAME_DEFAULT = '{{ server_name_default }}'
USERNAME = '{{ username }}'



# Set repo urls
### # Use git.charlesreid1.com to clone charlesreid1.com content
### repourl = "https://git.charlesreid1.com/charlesreid1/charlesreid1.com.git"
#
# Use github.com to clone charlesreid1.com content
repourl = "https://github.com/charlesreid1-docker/charlesreid1.com.git"

# Set directory locations
root = '/www'
basedir = os.path.join(root,SERVER_NAME_DEFAULT)
htdocsdir = os.path.join(basedir,'htdocs')
dotgitdir = os.path.join(basedir,'git.%s'%(SERVER_NAME_DEFAULT))

# Start by making sure the base directory exists
subprocess.call(['mkdir','-p',basedir])

# Run the clone command, but only if we don't have an htdocs dir yet
# /www/SERVER_NAME_DEFAULT/htdocs 
if not os.path.exists(htdocs_dir):

    # Clone htdocs folder for SERVER_NAME_DEFAULT
    clonecmd = ['git','clone',
                '--separate-git-dir=%s'%(dotgitdir),
                '-b','gh-pages',
                repourl, htdocsdir]

    print("About to clone /www content for %s using command:\n"%(SERVER_NAME_DEFAULT))
    print("    $ " + " ".join(clonecmd))
    print("\n")
    try:
        p = subprocess.Popen(clonecmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    except:
        msg = "Something went wrong with the clone /www command. Output:"
        msg += "\n"
        msg += p.stdout.readline()
        msg += "\n"
        msg += p.stderr.readline()
        print(msg)
    finally:
        print("Done.")


# Step 2: chown everybody
# Construct chown command
chowncmd = ['chown','-R',
            USERNAME+":"+USERNAME,
            basedir]

print("About to chown htdocs using command:\n")
print("    $ " + " ".join(chowncmd))
print("\n")
try:
    p = subprocess.Popen(chowncmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
except:
    msg = "Something went wrong with the chown command. Output:"
    msg += "\n"
    msg += p.stdout.readline()
    msg += "\n"
    msg += p.stderr.readline()
    print(msg)
finally:
    print("Done.")

