#!/usr/bin/env python3
import subprocess
import os, sys
import time
from datetime import datetime
from executioner import execute

"""
Forever Loop of MySQL Backup Task

Run a forever loop to back up MySQL databases.
"""

def task(pod_dir,username):

    work_dir = os.path.join(pod_dir,'scripts')

    mw_dir = os.path.join(pod_dir,'utils-mw')

    backup_dir = os.path.join('/backups','mediawiki')

    def run_cmd(f,cmd):
        """This runs a command and writes the output to a log file."""
        f.write("About to run the following command for backup mysql task:\n")
        f.write("    $ " + " ".join(cmd))
        f.write("\n")
        f.write("Command Output:")
        for loo in execute(cmd):
            f.write(loo)
        f.write("\n")
        f.write("Done.")

    d = datetime.now().strftime('%Y-%m-%d_%H%M')

    logfile = '/tmp/backup_mw_forever_%s.log'%(d)
    print("Log file: %s"%(logfile))
    with open(logfile,'w') as f:

        py_bin = sys.executable

        # Step 1:
        # Make sure work dir and backup dir exist
        if not os.path.exists(work_dir):
            # Quit if working dir does not exist
            return

        if not os.path.exists(backup_dir):
            # Make backup dir if it does not exist
            subprocess.call(['mkdir','-p',backup_dir])
            subprocess.call(['chown',username+':'+username,backup_dir])

        time.sleep(5)

        # Step 2:
        # Back up wiki files to tar file
        backup_script = os.path.join(mw_dir,'backup_wikifiles.sh')
        tar_file = 'wikifiles_%s.tar.gz'%(d)
        backup_target = os.path.join(backup_dir,tar_file)

        backup_cmd = [backup_script,backup_target]
        run_cmd(f,backup_cmd)

        time.sleep(5)



if __name__=="__main__":

    # Run a forever loop
    time.sleep(10)
    while True:
        task('{{ pod_install_dir }}','{{ username }}')
        fudge = 30
        one_week = 7*24*60*60 - fudge
        time.sleep(one_week)

