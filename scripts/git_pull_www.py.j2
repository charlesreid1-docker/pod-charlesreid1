#!/usr/bin/env python3
import subprocess
import os

"""
Pull /www

This script git pulls the /www directory
for updating charlesreid1.com content.
"""

SERVER_NAME_DEFAULT = '{{ server_name_default }}'
USERNAME = '{{ username }}'

def execute(cmd):
    """
    A function to run a command and return the
    lines of output as they are generated,
    allowing the calling function to "stream"
    the output of the command to print() or etc.
    """
    p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
    for stdout_line in iter(p.stdout.readline, ""):
        yield stdout_line
    p.stdout.close()
    return_code = p.wait()
    if return_code:
        raise subprocess.CalledProcessError(return_code, cmd)


# Set directory locations
root = '/www'
basedir = os.path.join(root,SERVER_NAME_DEFAULT)
htdocsdir = os.path.join(basedir,'htdocs')
dotgitdir = os.path.join(basedir,'git.htdocs')

# Step 1: git pull
# Run the pull command, but only if 
# the htdocs dir already exists
# /www/<domain>/htdocs 
if os.path.exists(htdocsdir):
    
    # Git pull, respecting the non-standard
    # layout of the .git directory
    pullcmd = ['git',
               '-C',basedir,
               '--git-dir=%s'%(dotgitdir),
               '--work-tree=%s'%(htdocsdir),
               'pull','origin','gh-pages']

    print("About to pull /www content for %s using command:\n"%(SERVER_NAME_DEFAULT))
    print("    $ " + " ".join(pullcmd))
    print("\n")

    for loo in execute(pullcmd):
        print("\t> "+loo, end="")

    print("Done.")


# Step 2: chown everybody
# Construct chown command
chowncmd = ['chown','-R',
            USERNAME+":"+USERNAME,
            basedir]

print("About to chown /www directory using command:\n")
print("    $ " + " ".join(chowncmd))
print("\n")

for loo in execute(chowncmd):
    print("\t> "+loo, end="")

print("Done.")

